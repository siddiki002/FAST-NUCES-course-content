==========================================		TASK 1			====================================================
INCLUDE irvine32.inc

.data 
val1 SDWORD 8000

.code
main proc
add val1,1	; value of sign flag is 0
call dumpregs	; value of carry flag is 0
exit 
main endp
end main

==========================================		TASK 2			====================================================
INCLUDE irvine32.inc

.data 
val1 SDWORD 8000

.code
main proc
mov ax,7FF0h
add al,10h		;a CF = 1 SF = 0 OF = 0 ZF = 1
add ah,1		;b CF = 0 SF = 0 ZF = 0 OF = 1
add ax,2		;c CF= 0 SF = 0 ZF = 0 OF = 0
call dumpregs
exit 
main endp
end main
==========================================		TASK 3			====================================================
INCLUDE irvine32.inc

.data 
array DWORD 8,5,1,2,6

.code
main proc
mov esi,0
mov eax,array[esi]
xchg eax,array[esi+8]
mov array[esi],eax
mov eax,array[esi+4]
xchg eax,array[esi+12]
mov array[esi+4],eax
mov eax,array[esi+8]
xchg eax,array[esi+12]
mov array[esi+8],eax
mov eax,array[esi+12]
xchg eax,array[esi+16]
mov array[esi+12],eax
mov ecx,5
L1:
	mov eax,array[esi]
	call writedec
	call crlf
	add esi,4
loop L1

;call dumpregs
exit 
main endp
end main
==========================================		TASK 4			====================================================
INCLUDE irvine32.inc

.data 
arrayB Byte 10,20,30
arrayW word 150,250,350
arrayD DWORD 600,1200,1800
sum1 dword 0
sum2 dword 0
sum3 dword 0
.code
main proc
xor eax,eax
mov al,arrayB[0]
add ax,arrayW[0]
add eax,arrayD[0]
mov sum1,eax

xor eax,eax
mov al,arrayB[1]
add ax,arrayW[2]
add eax,arrayD[4]
mov sum2,eax

xor eax,eax
mov al,arrayB[3]
add ax,arrayW[4]
add eax,arrayD[8]
mov sum3,eax
call dumpregs
exit 
main endp
end main
==========================================		TASK 5			====================================================
INCLUDE irvine32.inc

.data 

array1 Byte 10,20,30,40
array2 Byte 4 Dup(?)

.code

main proc
xor eax,eax

mov al,array1[3]
mov array2[0],al
mov al,0
mov al,array1[2]
mov array2[1],al
mov al,0
mov al,array1[1]
mov array2[2],al
mov al,0
mov al,array1[0]
mov array2[3],al
;call dumpregs
;exit
mov ecx,4
mov esi,0
L1:
	mov al,array2[esi]
	call writedec
	call crlf
	inc esi
loop L1
exit
main endp
end main
==========================================		TASK 6			====================================================
INCLUDE irvine32.inc

.data 

array1 dword 400,80,10,9


.code

main proc
mov esi,offset array1
mov eax,[esi]
add esi,4
sub eax,[esi]
add esi,4
sub eax,[esi]
add esi,4
sub eax,[esi]
call dumpregs
exit

main endp
end main
==========================================		TASK 7			====================================================
INCLUDE irvine32.inc

.data 

arrayb byte 60,70,80
arrayw word 150,250,350
arrayd dword 600,1200,1800


.code

main proc
xor eax,eax
xor ebx,ebx
xor ecx,ecx

mov esi,0
mov al,arrayb[esi]
mov esi,2
add al,arrayb[esi * type arrayb]
mov esi,0
mov bx,arrayw[esi]
mov esi,2
add bx,arrayw[esi*type arrayw]
mov esi,0
mov ecx,arrayd[esi]
mov esi,2
add ecx,arrayd[esi * type arrayd]
call dumpregs
exit
main endp
end main



